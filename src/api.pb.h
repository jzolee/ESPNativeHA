// =========================================================================
//                             api.pb.h
// =========================================================================
/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_API_PB_H_INCLUDED
#define PB_API_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _LogLevel {
    LOG_LEVEL_NONE = 0,
    LOG_LEVEL_ERROR = 1,
    LOG_LEVEL_WARN = 2,
    LOG_LEVEL_INFO = 3,
    LOG_LEVEL_DEBUG = 4,
    LOG_LEVEL_VERBOSE = 5,
    LOG_LEVEL_VERY_VERBOSE = 6
} LogLevel;

/* Struct definitions */
typedef struct _HelloRequest {
    char client_id[64];
    uint32_t api_version_major;
    uint32_t api_version_minor;
} HelloRequest;

typedef struct _HelloResponse {
    uint32_t api_version_major;
    uint32_t api_version_minor;
    bool server_info_loaded;
    char server_info[64];
} HelloResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _LogLevel_MIN LOG_LEVEL_NONE
#define _LogLevel_MAX LOG_LEVEL_VERY_VERBOSE
#define _LogLevel_ARRAYSIZE ((LogLevel)(LOG_LEVEL_VERY_VERBOSE+1))

/* Initializer values for message structs */
#define HelloRequest_init_default                {"", 0, 0}
#define HelloResponse_init_default               {0, 0, 0, ""}
#define HelloRequest_init_zero                   {"", 0, 0}
#define HelloResponse_init_zero                  {0, 0, 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define HelloRequest_client_id_tag               1
#define HelloRequest_api_version_major_tag       2
#define HelloRequest_api_version_minor_tag       3
#define HelloResponse_api_version_major_tag      1
#define HelloResponse_api_version_minor_tag      2
#define HelloResponse_server_info_loaded_tag     3
#define HelloResponse_server_info_tag            4

/* Struct field encoding specification for nanopb */
#define HelloRequest_FIELDLIST(X, t) \
X(t, STATIC,   SINGULAR, STRING,   client_id,         1) \
X(t, STATIC,   SINGULAR, UINT32,   api_version_major,   2) \
X(t, STATIC,   SINGULAR, UINT32,   api_version_minor,   3)
#define HelloRequest_CALLBACK NULL
#define HelloRequest_DEFAULT NULL

#define HelloResponse_FIELDLIST(X, t) \
X(t, STATIC,   SINGULAR, UINT32,   api_version_major,   1) \
X(t, STATIC,   SINGULAR, UINT32,   api_version_minor,   2) \
X(t, STATIC,   SINGULAR, BOOL,     server_info_loaded,   3) \
X(t, STATIC,   SINGULAR, STRING,   server_info,       4)
#define HelloResponse_CALLBACK NULL
#define HelloResponse_DEFAULT NULL

extern const pb_msgdesc_t HelloRequest_msg;
extern const pb_msgdesc_t HelloResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define HelloRequest_fields &HelloRequest_msg
#define HelloResponse_fields &HelloResponse_msg

/* Maximum encoded size of messages (where known) */
#define HelloRequest_size                        74
#define HelloResponse_size                       79
#define API_PB_H_MAX_SIZE                        HelloResponse_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif